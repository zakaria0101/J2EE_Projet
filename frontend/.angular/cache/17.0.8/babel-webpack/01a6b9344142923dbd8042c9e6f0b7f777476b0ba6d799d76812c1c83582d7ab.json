{"ast":null,"code":"import { UserService } from \"../services/user.service\";\nimport { HttpEvent, HttpHandler, HttpRequest } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nexport let JwtInterceptor = /*#__PURE__*/(() => {\n  class JwtInterceptor {\n    constructor(userService) {\n      this.userService = userService;\n    }\n    intercept(request, next) {\n      // add authorization header with jwt token if available\n      const currentUser = this.userService.currentUserValue;\n      if (currentUser && currentUser.token) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: `${currentUser.type} ${currentUser.token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n      return next.handle(request);\n    }\n    static #_ = this.ɵfac = function JwtInterceptor_Factory(t) {\n      return new (t || JwtInterceptor)(i0.ɵɵinject(i1.UserService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: JwtInterceptor,\n      factory: JwtInterceptor.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return JwtInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}