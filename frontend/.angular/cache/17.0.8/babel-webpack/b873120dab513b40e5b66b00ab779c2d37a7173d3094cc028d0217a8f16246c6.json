{"ast":null,"code":"var _a;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ProductService } from '../../services/product.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CartService } from '../../services/cart.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ProductInOrder } from '../../models/ProductInOrder';\nlet DetailComponent = class DetailComponent {\n  constructor(productService, cartService, cookieService, route, router) {\n    this.productService = productService;\n    this.cartService = cartService;\n    this.cookieService = cookieService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.getProduct();\n    this.title = 'Product Detail';\n    this.count = 1;\n  }\n  // ngOnChanges(changes: SimpleChanges): void {\n  //   // Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n  //   // Add '${implements OnChanges}' to the class.\n  //   console.log(changes);\n  //   if (this.item.quantity in changes) {\n  //   }\n  // }\n  getProduct() {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.productService.getDetail(id).subscribe(prod => {\n      this.productInfo = prod;\n    }, _ => console.log('Get Cart Failed'));\n  }\n  addToCart() {\n    this.cartService.addItem(new ProductInOrder(this.productInfo, this.count)).subscribe(res => {\n      if (!res) {\n        console.log('Add Cart failed' + res);\n        throw new Error();\n      }\n      this.router.navigateByUrl('/cart');\n    }, _ => console.log('Add Cart Failed'));\n  }\n  validateCount() {\n    console.log('Validate');\n    const max = this.productInfo.productStock;\n    if (this.count > max) {\n      this.count = max;\n    } else if (this.count < 1) {\n      this.count = 1;\n    }\n  }\n};\nDetailComponent = __decorate([Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n}), __metadata(\"design:paramtypes\", [ProductService, CartService, typeof (_a = typeof CookieService !== \"undefined\" && CookieService) === \"function\" ? _a : Object, ActivatedRoute, Router])], DetailComponent);\nexport { DetailComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}